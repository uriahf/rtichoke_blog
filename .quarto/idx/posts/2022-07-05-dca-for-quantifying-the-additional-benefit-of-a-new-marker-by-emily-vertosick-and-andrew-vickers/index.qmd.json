{"title":"DCA for Quantifying the Additional Benefit of a New Marker by Emily Vertosick and Andrew Vickers","markdown":{"yaml":{"title":"DCA for Quantifying the Additional Benefit of a New Marker by Emily Vertosick and Andrew Vickers","date":"2022-07-05","categories":["Replications","Decision","Emily Vertosick","Andrew Vickers","gt","gtsummary","dcurves","rms","Hmisc"],"image":"image.jpg","draft":false},"headingText":"| message: false","containsRefs":false,"markdown":"\n\n```{r}\n#| warning: false\n#| eval: false\n#| include: false\n\nlibrary(tidyverse)\nlibrary(rms)\nlibrary(gtsummary)\nlibrary(dcurves)\nlibrary(gt)\n\n\n\n# Load data\noptions(prType='html')\nHmisc::getHdata(acath)\n\n# drop those without cholesterol and setup sex variable\nacath <- subset(acath, !is.na(choleste))\n\n# pre model (age and sex)\npre <- lrm(sigdz ~ rcs(age,4) * sex, data = acath)\npre_pred <- predict(pre, type='fitted')\n\n# post model (age, sex and cholesterol)\npost <- lrm(sigdz ~ rcs(age,4) * sex + rcs(choleste,4) + rcs(age,4) %ia%\n              rcs(choleste,4), data = acath)\npost_pred <- predict(post, type='fitted')\n\n# combine predictions with original data\nacath_pred <-\n  bind_cols(\n    acath,\n    pre_pred %>% enframe(name = NULL, value = \"pre\"),\n    post_pred %>% enframe(name = NULL, value = \"post\")\n  )\n\n# decision curve\ndca_prepost <-\n  dca(\n    sigdz ~ pre + post,\n    data = acath_pred,\n    label = list(pre = \"Age and Sex\", \n                 post = \"Age, Sex and Cholesterol\"), \n  )\n\ndca_prepost_smooth <-\n  dca_prepost %>%\n  plot(smooth = TRUE)\n\ndca_prepost_15_35 <-\n  dcurves::dca(\n    sigdz ~ pre + post,\n    data = acath_pred,\n    thresholds = seq(0.15, 0.35, by = 0.05),\n    label = list(pre = \"Age and Sex\", post = \"Age, Sex and Cholesterol\"),\n    # show_ggplot_code = TRUE\n  ) %>%\n  plot(type = 'net_benefit', \n       smooth = FALSE, \n       show_ggplot_code = FALSE)\n\n# net interventions avoided\ndca_prepost_netint_ob <- dca_prepost %>%\n  dcurves::net_intervention_avoided() \n\ndca_prepost_netint <- dca_prepost_netint_ob %>% \n  plot(x, \n       type = 'net_intervention_avoided', \n       smooth = FALSE, \n       show_ggplot_code = FALSE)\n\n# estimates table\ndf_dca_tbl <-\n  dca_prepost_netint_ob$dca %>%\n  filter(variable %in% c(\"pre\", \"post\")) %>%\n  # keep 5-50%, by 5%\n  transmute(\n    threshold100 = threshold*100,\n    groupvar = factor(variable, levels = c(\"pre\", \"post\")),\n    net_benefit, net_intervention_avoided\n  ) %>%\n  filter(threshold100 > 1 & threshold100 <= 50 & round(threshold100 %% 5) == 0) %>%\n  mutate(threshold100 = factor(str_glue(\"{threshold100}%\"),\n                               levels = c(\"5%\", \"10%\", \"15%\", \"20%\", \"25%\",\n                                          \"30%\", \"35%\", \"40%\", \"45%\", \"50%\")))\n\n# create gtsummary table to start so gtsummary themes can be used\ndca_tbl_continuous <-\n  tbl_continuous(\n    data = df_dca_tbl,\n    variable = net_benefit,\n    include = threshold100,\n    by = groupvar,\n    statistic = list(everything() ~ \"{median}\"),\n    digits = list(everything() ~ 4)\n  ) %>%\n  modify_footnote(everything() ~ NA) %>%\n  modify_header(update = list(\n    label ~ \"**Threshold**\",\n    stat_1 ~ \"**Net Benefit (Age+Sex)**\",\n    stat_2 ~ \"**Net Benefit (Age+Sex+Cholesterol)**\"\n  ))\n\ndf_diff_tbl <-\n  df_dca_tbl %>%\n  # First, reshape two columns to long\n  pivot_longer(\n    cols = c(starts_with(\"net_\"))\n  ) %>%\n  # Create name variable\n  unite(name, c(groupvar, name), sep = \"_\") %>%\n  # Reshape to wide to get difference\n  pivot_wider(\n    names_from = \"name\",\n    values_from = \"value\"\n  ) %>%\n  # Calculate differences\n  transmute(\n    threshold100,\n    diff_net_benefit = post_net_benefit - pre_net_benefit,\n    diff_net_intavoid = post_net_intervention_avoided - pre_net_intervention_avoided\n  )\n\n# Merge in with continuous table\nestimate_tbl <-\n  dca_tbl_continuous %>%\n  modify_table_body(\n    ~ .x %>%\n      left_join(\n        df_diff_tbl,\n        by = c(\"label\" = \"threshold100\")\n      ) %>%\n      filter(row_type != \"label\")\n  ) %>%\n  modify_header(\n    diff_net_benefit = \"**Difference in Net Benefit**\",\n    diff_net_intavoid = \"**Net Difference in Interventions Avoided per 100 patients**\"\n  ) %>%\n  modify_fmt_fun(c(diff_net_benefit, diff_net_intavoid) ~ function(x) { style_sigfig(x, digits = 4)})\n\n\nperformance_data_dc <- rtichoke::prepare_performance_data(\n  probs = list(\"Age and Sex\" = acath_pred$pre,\n               \"Age, Sex and Cholesterol\" = acath_pred$post),\n  reals = list(acath_pred$sigdz)\n) \n\n\nconventional_dc <- performance_data_dc %>% \n  rtichoke::plot_decision_curve(\n    col_values = c(\"#00BFC4\", \"#C77CFF\"),\n    size = 400\n  ) %>% \n  plotly::layout(\n    yaxis = list(range =\n                   c(-0.07, 0.7))\n  )\n\n```\n\n## Additional Benefit of a New Marker\n\nPrediction Model might gain accuracy if you'll add more relevant features to existing models, but many times it's not obvious what is the additional value of additional feature and how to quantify it in terms of Decision Making. The post [Decision curve analysis for quantifying the additional benefit of a new marker](https://www.fharrell.com/post/addmarkerdca) by Emily Vertosick and Andrew Vickers show a simple example (the code presented here is almost identical to the original code presented in the link).\n\n## Preparing the Data\n\n### Loading the Data with Hmisc\n\n```{r}\n#| message: false\n#| warning: false\n\nlibrary(Hmisc)\nlibrary(dplyr)\nlibrary(tibble)\n\ngetHdata(acath)\nacath <- subset(acath, !is.na(choleste))\n\n```\n\n### Fitting Logistic Regressions with rms\n\n```{r}\n#| message: false\n#| warning: false\nlibrary(rms)\n\npre <- lrm(sigdz ~ rcs(age,4) * sex, data = acath)\npre_pred <- predict(pre, type='fitted')\n\npost <- lrm(sigdz ~ rcs(age,4) * sex + \n              rcs(choleste,4) + rcs(age,4) %ia% rcs(choleste,4), data = acath)\npost_pred <- predict(post, type='fitted')\n\nacath_pred <- bind_cols(\n    acath,\n    pre_pred %>% enframe(name = NULL, value = \"pre\"),\n    post_pred %>% enframe(name = NULL, value = \"post\")\n  )\n```\n\n## Conventional Decision Curve\n\n::: panel-tabset\n### dcurves\n\n::: {layout-ncol=\"2\"}\n```{r}\n#| message: false\n#| warning: false\n#| eval: false\n\nlibrary(dcurves)\n\ndca_prepost <- dca(\n    sigdz ~ pre + post,\n    data = acath_pred,\n    label = list(\n      pre = \"Age and Sex\",\n      post = \"Age, Sex and Cholesterol\"))\n\ndca_prepost %>%\n  plot(smooth = TRUE)  + \n  theme_classic()  +\n  theme(legend.position = \"none\")\n\n```\n\n![](./conventional_decision.svg)\n\n```{r}\n#| include: false\n#| eval: false\n\n# \n# dca_prepost_smooth_plot <- dca_prepost_smooth + \n#   theme_classic() +\n#   theme(legend.position = \"none\") +\n#   ggplot2::theme(\n#     rect = ggplot2::element_rect(fill = \"transparent\"),\n#     panel.background = ggplot2::element_rect(fill='transparent'), #transparent panel bg\n#     plot.background = ggplot2::element_rect(fill='transparent', color=NA), #transparent plot bg\n#     panel.grid.major = ggplot2::element_blank(), #remove major gridlines\n#     panel.grid.minor = ggplot2::element_blank(), #remove minor gridlines\n#     legend.background = ggplot2::element_rect(fill='transparent'), #transparent legend bg\n#     legend.box.background = ggplot2::element_rect(fill='transparent') #transparent legend panel\n#   ) \n\n# \n# ggsave(\"./content/blog/2022-07-05-dca-for-quantifying-the-additional-benefit-of-a-new-marker-by-emily-vertosick-and-andrew-vickers/conventional_decision.svg\",\n#        bg='transparent',\n#        units = \"px\")\n\n```\n:::\n\n### rtichoke\n\n::: {layout-ncol=\"2\"}\n```{r}\n#| message: false\n#| eval: false\n#| warning: false\n\nlibrary(rtichoke)\nlibrary(plotly)\n\nperformance_data_dc <- \n  prepare_performance_data(\n  probs = list(\n    \"Age and Sex\" = \n      acath_pred$pre,\n    \"Age, Sex and Cholesterol\" = \n      acath_pred$post\n  ),\n  reals = list(acath_pred$sigdz)\n)\n\nperformance_data_dc %>%\n  plot_decision_curve(\n    col_values = \n      c(\"#00BFC4\", \"#C77CFF\"),\n    size = 350\n  ) %>%\n  layout(\n    yaxis = list(\n      range =\n        c(-0.07, 0.7)\n    )\n  )\n\n```\n\n```{r}\n#| message: false\n#| echo: false\n#| warning: false\n\nlibrary(rtichoke)\nlibrary(plotly)\n\nperformance_data_dc <- rtichoke::prepare_performance_data(\n  probs = list(\"Age and Sex\" = acath_pred$pre,\n               \"Age, Sex and Cholesterol\" = acath_pred$post),\n  reals = list(acath_pred$sigdz)\n) \n\nconventional_dc <- performance_data_dc %>% \n  rtichoke::plot_decision_curve(\n    col_values = c(\"#00BFC4\", \"#C77CFF\"),\n    size = 350\n  ) %>% \n  layout(\n    yaxis = list(range =\n                   c(-0.07, 0.7))\n  )\n\nconventional_dc %>% \n  plotly::layout(plot_bgcolor = \"#fff7f5\", \n                paper_bgcolor= \"#fff7f5\")\n```\n:::\n:::\n\n## Specific Range of Probability Thresholds\n\n::: panel-tabset\n### dcurves\n\n::: {layout-ncol=\"2\"}\n```{r}\n#| message: false\n#| eval: false\n#| warning: false\nlibrary(dcurves)\n\ndca_prepost_15_35 <- dca(\n    sigdz ~ pre + post,\n    data = acath_pred,\n    thresholds = seq(0.15, 0.35, by = 0.05),\n    label = list(\n      pre = \"Age and Sex\",\n      post = \"Age, Sex and Cholesterol\")) %>%\n  plot(type = 'net_benefit', \n       smooth = FALSE, \n       show_ggplot_code = FALSE)\n\ndca_prepost_15_35 + \n  theme_classic()  + \n  theme(legend.position = \"none\")\n\n```\n\n```{r}\n#| eval: false\n#| include: false\n\n# dca_prepost_15_35_smooth_plot <- dca_prepost_15_35 +\n#   theme_classic() +\n#   theme(legend.position = \"none\") +\n#   ggplot2::theme(\n#     rect = ggplot2::element_rect(fill = \"transparent\"),\n#     panel.background = ggplot2::element_rect(fill='transparent'), #transparent panel bg\n#     plot.background = ggplot2::element_rect(fill='transparent', color=NA), #transparent plot bg\n#     panel.grid.major = ggplot2::element_blank(), #remove major gridlines\n#     panel.grid.minor = ggplot2::element_blank(), #remove minor gridlines\n#     legend.background = ggplot2::element_rect(fill='transparent'), #transparent legend bg\n#     legend.box.background = ggplot2::element_rect(fill='transparent') #transparent legend panel\n#   )\n\n\n# ggsave(\"./content/blog/2022-07-05-dca-for-quantifying-the-additional-benefit-of-a-new-marker-by-emily-vertosick-and-andrew-vickers/conventional_decision_15_35.svg\",\n#        bg='transparent',\n#        height = 1200, \n#        width = 1200,\n#        units = \"px\")\n\n```\n\n![](conventional_decision_15_35.svg)\n:::\n\n### rtichoke\n\n::: {layout-ncol=\"2\"}\n```{r}\n#| message: false\n#| eval: false\n#| warning: false\n\nperformance_data_dc %>% \n  rtichoke::plot_decision_curve(\n    col_values = c(\"#00BFC4\", \"#C77CFF\"),\n    min_p_threshold = 0.15, \n    max_p_threshold = 0.35,\n    size = 350\n  ) %>% \n  plotly::layout(\n    yaxis = list(range =\n                   c(-0.07, 0.7))\n  ) \n```\n\n```{r}\n#| message: false\n#| echo: false\n#| warning: false\n\nperformance_data_dc %>% \n  rtichoke::plot_decision_curve(\n    col_values = c(\"#00BFC4\", \"#C77CFF\"),\n    min_p_threshold = 0.15, \n    max_p_threshold = 0.35,\n    size = 350\n  ) %>% \n  plotly::layout(\n    yaxis = list(range =\n                   c(-0.07, 0.7))\n  ) %>% \n  plotly::layout(plot_bgcolor = \"#fff7f5\", \n                paper_bgcolor= \"#fff7f5\")\n```\n:::\n:::\n\n## Interventions Avoided\n\n::: panel-tabset\n### dcurves\n\n::: {layout-ncol=\"2\"}\n```{r}\n#| message: false\n#| eval: false\n#| warning: false\n\n# code\n```\n\n![](./interventions_avoided.svg)\n:::\n\n### rtichoke\n\n::: {layout-ncol=\"2\"}\n```{r}\n#| message: false\n#| eval: false\n#| warning: false\n\nperformance_data_dc %>%\n  rtichoke::plot_decision_curve(\n    col_values = c(\"#F8766D\", \"#00BFC4\"),\n    type = \"interventions avoided\",\n    size = 350\n  ) %>%\n  plotly::layout(\n    yaxis = list(range =\n                   c(-10, 100))\n  )\n\n```\n\n```{r}\n#| message: false\n#| echo: false\n#| warning: false\n\nperformance_data_dc %>%  \n  rtichoke::plot_decision_curve( \n    col_values = c(\"#F8766D\", \"#00BFC4\"), \n    type = \"interventions avoided\",\n    size = 350\n  ) %>%  \n  plotly::layout(\n    yaxis = list(range = \n                   c(-10, 100)) \n  ) %>% \nplotly::layout(plot_bgcolor = \"#fff7f5\", \n               paper_bgcolor= \"#fff7f5\") \n```\n:::\n:::\n\n## Conventional and Interventions Avoided Combined (rtichoke code)\n::: {layout-ncol=\"2\"}\n\n```{r}\n#| message: false\n#| eval: false\n#| warning: false\n\nperformance_data_dc %>%\n  plot_decision_curve(\n    col_values = \n      c(\"#00BFC4\", \"#C77CFF\"),\n    type = \"combined\",\n    size = 500\n  )\n\n```\n\n```{r}\n#| message: false\n#| echo: false\n#| warning: false\n\nperformance_data_dc %>%\n\n  rtichoke::plot_decision_curve(\n    col_values = c(\"#00BFC4\", \"#C77CFF\"),\n    type = \"combined\",\n    size = 500\n  ) %>%\nplotly::layout(plot_bgcolor = \"#fff7f5\",\n               paper_bgcolor= \"#fff7f5\")\n\n```\n:::"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.38","editor":"visual","theme":"../../theme.scss","title-block-banner":true,"comments":{"utterances":{"repo":"uriahf/blogComments"}},"title":"DCA for Quantifying the Additional Benefit of a New Marker by Emily Vertosick and Andrew Vickers","date":"2022-07-05","categories":["Replications","Decision","Emily Vertosick","Andrew Vickers","gt","gtsummary","dcurves","rms","Hmisc"],"image":"image.jpg","draft":false},"extensions":{"book":{"multiFile":true}}}}}